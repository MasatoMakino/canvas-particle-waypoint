(()=>{"use strict";var __webpack_modules__={728:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/@masatomakino/particle-waypoint/esm/index.js + 10 modules\nvar esm = __webpack_require__(137);\n;// CONCATENATED MODULE: ./esm/Canvas2DParticle.js\n\nclass Canvas2DParticle extends esm/* Particle */.hp {\n  constructor() {\n    super(...arguments);\n    this.r = 0.0;\n    //媒介変数tに応じた回転量\n    this.rotationSpeedSin = 0.0;\n    this.rotationSpeedCos = 0.0;\n    //初期回転量\n    this.rotationSin = 0.0;\n    this.rotationCos = 0.0;\n  }\n  init(ctx, bitmap, rangeR, rangeRotationSpeed) {\n    this.ctx = ctx;\n    this.bitmap = bitmap;\n    this.r = rangeR * Math.random();\n    this.rotationSpeedSin = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSpeedCos = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSin = Math.random() * 2 * Math.PI;\n    this.rotationCos = Math.random() * 2 * Math.PI;\n  }\n  update(t) {\n    const n = super.update(t);\n    const pos = this.path.getPoint(n);\n    this.positionX = pos[0];\n    this.positionY = pos[1];\n    if (this.r > 0.0) {\n      const sin = this.rotationSpeedSin * t + this.rotationSin;\n      const cos = this.rotationSpeedCos * t + this.rotationCos;\n      this.positionX += Math.cos(cos) * this.r;\n      this.positionY += Math.sin(sin) * this.r;\n    }\n    return n;\n  }\n  draw() {\n    if (this.bitmap == null) return;\n    const px = this.positionX - this.bitmap.width / 2;\n    const py = this.positionY - this.bitmap.height / 2;\n    this.ctx.drawImage(this.bitmap, 0.5 + px | 0, 0.5 + py | 0);\n  }\n  dispose() {\n    super.dispose();\n    this.ctx = null;\n    this.bitmap = null;\n  }\n}\n;// CONCATENATED MODULE: ./esm/Canvas2DParticleGenerator.js\n\n\nclass Canvas2DParticleGenerator extends esm/* ParticleGenerator */.F8 {\n  constructor(ctx, path, map, option) {\n    super(path, option);\n    this.mapCounter = 0;\n    this._rangeR = 0.0;\n    this._rangeRotationSpeed = 0.0;\n    this.ctx = ctx;\n    if (option) {\n      if (option.rangeR) this._rangeR = option.rangeR;\n      if (option.rangeRotationSpeed) this._rangeRotationSpeed = option.rangeRotationSpeed;\n    }\n    if (Array.isArray(map)) {\n      if (map.length === 0) {\n        console.warn("Canvas2DParticleGenerator : オプションとして渡されたビットマップ配列が空です。このクラスは動作しますが、一切の表示を行いません。");\n        console.trace();\n      }\n      this.map = map;\n    } else {\n      this.map = [map];\n    }\n  }\n  generateParticle(path) {\n    const particle = new Canvas2DParticle(path);\n    particle.init(this.ctx, this.map[this.mapCounter], this._rangeR, this._rangeRotationSpeed);\n    this.mapCounter = (this.mapCounter += 1) % this.map.length;\n    return particle;\n  }\n  generateAll() {\n    this.mapCounter = 0;\n    super.generateAll();\n  }\n  get rangeRotationSpeed() {\n    return this._rangeRotationSpeed;\n  }\n  set rangeRotationSpeed(value) {\n    this._rangeRotationSpeed = value;\n  }\n  get rangeR() {\n    return this._rangeR;\n  }\n  set rangeR(value) {\n    this._rangeR = value;\n  }\n  draw() {\n    if (!this.particleContainer || this.particleContainer.particles.length === 0) return;\n    this.particleContainer.particles.forEach(p => {\n      p.draw();\n    });\n  }\n}\n;// CONCATENATED MODULE: ./esm/Canvas2DParticleWay.js\n\nclass Canvas2DParticleWay extends esm/* ParticleWay */.mG {\n  constructor(points, option) {\n    super(points);\n    if (!option) return;\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n;// CONCATENATED MODULE: ./demoSrc/SamplePath.js\nconst getHeartPath = () => {\n  return [[199.999692558296, 139.037809861326], [199.999692558296, 139.037809861326, 216.517501342052, 91.0703552349714, 260.408864739813, 101.478048251449], [304.306569058069, 111.887435228376, 302.040473463538, 149.898168782486, 297.969050788655, 167.089794944798], [293.891253219557, 184.314831799952, 266.291989537884, 213.247676318414, 241.405592420215, 229.538070494226], [216.517501342052, 245.828464670041, 201.360366325658, 263.475297677716, 199.999692558296, 269.360116287618], [198.644947652665, 263.475297677716, 183.481883774538, 245.828464670041, 158.595486656873, 229.538070494226], [133.70739557871, 213.247676318414, 106.111932139903, 184.314831799952, 102.030334327938, 167.089794944798], [97.9589002789453, 149.898168782486, 95.6966160382817, 111.887435228376, 139.592214337275, 101.478048251449], [183.481883774538, 91.0703552349714, 199.999692558296, 139.037809861326, 199.999692558296, 139.037809861326]];\n};\nconst getCircle = () => {\n  const X = 200;\n  const Y = 200;\n  const K = 4 * (Math.sqrt(2) - 1) / 3;\n  const R = 100;\n  const RK = R * K;\n  return [[R + X, 0 + Y], [R + X, RK + Y, RK + X, R + Y, 0 + X, R + Y], [-RK + X, R + Y, -R + X, RK + Y, -R + X, 0 + Y], [-R + X, -RK + Y, -RK + X, -R + Y, 0 + X, -R + Y], [RK + X, -R + Y, R + X, -RK + Y, R + X, 0 + Y]];\n};\nconst getTriangle = () => {\n  return [[200, 100], [300, 273.205080756887], [100, 273.205080756887], [200, 100]];\n};\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\n/**\n * createjsのステージを初期化する。\n * @return {createjs.Stage}\n */\nfunction initCanvas() {\n  const canvas = document.createElement("canvas");\n  document.body.appendChild(canvas);\n  canvas.id = "appCanvas";\n  canvas.width = 640;\n  canvas.height = 480;\n  canvas.style.width = "640px";\n  canvas.style.height = "480px";\n  canvas.style.backgroundColor = "#000";\n  return canvas;\n}\n\n/**\n * ParticleWayを初期化する。\n * @return {ParticleWay}\n */\nfunction initWay() {\n  const points = getHeartPath();\n  const wayPoint = new Canvas2DParticleWay(esm/* BezierUtil */.jP.subdivide(points));\n  return wayPoint;\n}\n// EXTERNAL MODULE: ./node_modules/@masatomakino/raf-ticker/esm/index.js + 2 modules\nvar raf_ticker_esm = __webpack_require__(163);\n// EXTERNAL MODULE: ./node_modules/@tweenjs/tween.js/dist/tween.esm.js\nvar tween_esm = __webpack_require__(984);\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(429);\n;// CONCATENATED MODULE: ./demoSrc/demo.js\n\n\n\n\n\n\n\n\n/**\n * DOMContentLoaded後の初期化処理。\n * デモに必要なパーツを一式初期化する。\n */\nconst onDomContentsLoaded = () => {\n  const canvas = initCanvas();\n  const ctx = canvas.getContext("2d");\n  const way = initWay();\n  const generator = initGenerator(way, canvas);\n  raf_ticker_esm/* RAFTicker */.F.addListener("tick", e => {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    generator.draw();\n  });\n  initGUI(generator);\n};\n\n/**\n * パーティクル生成機を初期化する。\n * @param way\n * @param canvas\n * @return {CanvasParticleGenerator}\n */\nconst initGenerator = (way, canvas) => {\n  const img = new Image();\n  img.src = "./circle.png";\n  const generator = new Canvas2DParticleGenerator(canvas.getContext("2d"), way, img, {\n    ease: tween_esm/* Easing */.oY.Cubic.InOut\n  });\n  generator.animator.setSpeed(100, 50);\n  generator.play();\n  return generator;\n};\n\n/**\n * デモのパラメーターを操作するGUIを初期化する。\n * @param generator\n */\nconst initGUI = generator => {\n  const prop = {\n    isPlay: true,\n    path: "heart",\n    ease: "cubicInOut",\n    valve: true,\n    mode: "sequential",\n    clear: () => {\n      generator.particleContainer.removeAll();\n    }\n  };\n  const gui = new lil_gui_esm/* default */.ZP();\n  const animator = generator.animator;\n  gui.add(animator, "generationInterval", 33, 1000);\n  gui.add(animator, "speedPerSec", 0.0001, 0.5);\n  gui.add(generator, "rangeR", 0.0, 32.0, 0.1);\n  gui.add(generator, "rangeRotationSpeed", 0.0, 3.14 * 4, 0.01);\n  gui.add(prop, "ease", ["cubicOut", "cubicInOut", "liner"]).onChange(() => {\n    let ease = null;\n    switch (prop.ease) {\n      case "cubicOut":\n        ease = tween_esm/* Easing */.oY.Cubic.Out;\n        break;\n      case "cubicInOut":\n        ease = tween_esm/* Easing */.oY.Cubic.InOut;\n        break;\n      case "liner":\n        ease = tween_esm/* Easing */.oY.Linear.None;\n        break;\n    }\n    generator.animator.updateEase(ease, generator.modeManager.mode);\n  });\n  gui.add(prop, "path", ["heart", "circle", "triangle"]).onChange(() => {\n    let path;\n    switch (prop.path) {\n      case "heart":\n        path = esm/* BezierUtil */.jP.subdivide(getHeartPath());\n        break;\n      case "circle":\n        path = esm/* BezierUtil */.jP.subdivide(getCircle());\n        break;\n      case "triangle":\n        path = getTriangle();\n        break;\n    }\n    generator.multipleWays.ways[0].points = path;\n  });\n  gui.add(prop, "isPlay").onChange(() => {\n    if (prop.isPlay) {\n      generator.play();\n    } else {\n      generator.stop();\n    }\n  });\n  gui.add(generator.modeManager, "mode", ["sequential", "loop"]);\n  gui.add(prop, "valve").onChange(() => {\n    if (prop.valve) {\n      generator.valve.open();\n    } else {\n      generator.valve.close();\n    }\n  });\n  gui.add(prop, "clear");\n};\n\n/**\n * DOMContentLoaded以降に初期化処理を実行する\n */\nif (document.readyState !== "loading") {\n  onDomContentsLoaded();\n} else {\n  document.addEventListener("DOMContentLoaded", onDomContentsLoaded);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///728\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var U=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](U,U.exports,__webpack_require__),U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,U,B)=>{if(!F){var I=1/0;for(C=0;C<deferred.length;C++){for(var[F,U,B]=deferred[C],s=!0,g=0;g<F.length;g++)(!1&B||I>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[g])))?F.splice(g--,1):(s=!1,B<I&&(I=B));if(s){deferred.splice(C--,1);var n=U();void 0!==n&&(Q=n)}}return Q}B=B||0;for(var C=deferred.length;C>0&&deferred[C-1][2]>B;C--)deferred[C]=deferred[C-1];deferred[C]=[F,U,B]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),(()=>{var Q={577:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,U)=>{var B,I,[s,g,n]=U,C=0;if(s.some((F=>0!==Q[F]))){for(B in g)__webpack_require__.o(g,B)&&(__webpack_require__.m[B]=g[B]);if(n)var i=n(__webpack_require__)}for(F&&F(U);C<s.length;C++)I=s[C],__webpack_require__.o(Q,I)&&Q[I]&&Q[I][0](),Q[I]=0;return __webpack_require__.O(i)},U=self.webpackChunk_masatomakino_canvas_particle_waypoint=self.webpackChunk_masatomakino_canvas_particle_waypoint||[];U.forEach(F.bind(null,0)),U.push=F.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(728)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();